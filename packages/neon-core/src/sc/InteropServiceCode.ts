import { str2hexstring, sha256 } from "../u";

export enum InteropServiceCode {
  SYSTEM_CONTRACT_CALL = "627d5b52",
  SYSTEM_CONTRACT_CALLNATIVE = "1af77b67",
  SYSTEM_CONTRACT_CREATEMULTISIGACCOUNT = "6a33e909",
  SYSTEM_CONTRACT_CREATESTANDARDACCOUNT = "cf998702",
  SYSTEM_CONTRACT_GETCALLFLAGS = "95da3a81",
  SYSTEM_CONTRACT_NATIVEONPERSIST = "2edbbc93",
  SYSTEM_CONTRACT_NATIVEPOSTPERSIST = "44a15d16",
  SYSTEM_CRYPTO_CHECKMULTISIG = "9ed0dc3a",
  SYSTEM_CRYPTO_CHECKSIG = "56e7b327",
  SYSTEM_ITERATOR_NEXT = "9c08ed9c",
  SYSTEM_ITERATOR_VALUE = "f354bf1d",
  SYSTEM_RUNTIME_BURNGAS = "c35a8cbc",
  SYSTEM_RUNTIME_CHECKWITNESS = "f827ec8c",
  SYSTEM_RUNTIME_GASLEFT = "1488d8ce",
  SYSTEM_RUNTIME_GETADDRESSVERSION = "4c4992dc",
  SYSTEM_RUNTIME_GETCALLINGSCRIPTHASH = "39536e3c",
  SYSTEM_RUNTIME_GETENTRYSCRIPTHASH = "f9b4e238",
  SYSTEM_RUNTIME_GETEXECUTINGSCRIPTHASH = "dbfea874",
  SYSTEM_RUNTIME_GETINVOCATIONCOUNTER = "84271143",
  SYSTEM_RUNTIME_GETNETWORK = "c5fba0e0",
  SYSTEM_RUNTIME_GETNOTIFICATIONS = "274335f1",
  SYSTEM_RUNTIME_GETRANDOM = "6bdea928",
  SYSTEM_RUNTIME_GETSCRIPTCONTAINER = "2d510830",
  SYSTEM_RUNTIME_GETTIME = "b7c38803",
  SYSTEM_RUNTIME_GETTRIGGER = "e97d38a0",
  SYSTEM_RUNTIME_LOG = "cfe74796",
  SYSTEM_RUNTIME_NOTIFY = "95016f61",
  SYSTEM_RUNTIME_PLATFORM = "b279fcf6",
  SYSTEM_STORAGE_ASREADONLY = "764cbfe9",
  SYSTEM_STORAGE_DELETE = "2f58c5ed",
  SYSTEM_STORAGE_FIND = "df30b89a",
  SYSTEM_STORAGE_GET = "925de831",
  SYSTEM_STORAGE_GETCONTEXT = "9bf667ce",
  SYSTEM_STORAGE_GETREADONLYCONTEXT = "f6b46be2",
  SYSTEM_STORAGE_PUT = "e63f1884",
}

export default InteropServiceCode;

export function generateInteropServiceCode(methodName: string): string {
  const hexMethodName = str2hexstring(methodName);
  return sha256(hexMethodName).slice(0, 8);
}

export function fromMethodName(methodName: string): InteropServiceCode {
  const enumName = methodName.toUpperCase().replace(".", "_");
  if (enumName in InteropServiceCode) {
    return InteropServiceCode[enumName as keyof typeof InteropServiceCode];
  }
  throw new Error("Method name not found in InteropServiceCode!");
}
